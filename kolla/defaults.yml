---
openstack_release: xena
cloud: envvars

docker_namespace: kolla
docker_registry_username: registry
docker_registry: docker.chameleoncloud.org
kolla_base_distro: ubuntu
kolla_install_type: source

# Disable addition of tag for CentOS8
# Remove this if pulling CentOS8 containers
openstack_tag_suffix: ""

# Write admin openRC to the site configuration
admin_openrc_directory: "{{ site_config_dir }}"

# Set according to https://docs.openstack.org/kolla-ansible/latest/user/virtual-environments.html#target-hosts
# virtualenv specifies the path to the kolla virtualenv, while ansible_python_interpreter must be set explicitly
# since it cannot be templated. This is overridden during bootstrap by cc-ansible.
virtualenv: /etc/ansible/venv
ansible_python_interpreter: /etc/ansible/venv/bin/python

chameleon_portal_url: https://www.chameleoncloud.org
chameleon_reference_api_url: https://api.chameleoncloud.org
# this needs to match the uid for your site at https://api.chameleoncloud.org/sites.json
chameleon_site_name: localhost
# Whether to show a dropdown in the Horizon GUI that provides links to other
# Chameleon testbed sites.
enable_chameleon_multisite: yes
# Default networking fallbacks
switch_configs: []
neutron_networks: []

enable_mariadb: yes
enable_chrony: yes
enable_fluentd: yes
enable_memcached: yes
memcached_max_memory: 2048
enable_rabbitmq: yes

# Automatic backups
# automatic backup is enabled by default using kolla mariadb backup and restore
# ref: https://docs.openstack.org/kolla-ansible/latest/admin/mariadb-backup-and-restore.html
enable_mariabackup: "{{ enable_mariadb }}"
mariabackup_location: mariadb_backup
mysqldump_location: /var/db/backup
backup_location: "{{ mariabackup_location if enable_mariabackup | bool else mysqldump_location }}"

# Blazar
enable_blazar: yes
enable_blazar_allocation_enforcement: no
blazar_project_enforcement_id: charge_code
# When to send lease notification email
blazar_minutes_before_end_lease: 2880
blazar_default_max_lease_duration: "{{ 60 * 60 * 24 * 7 }}"
blazar_default_reservation_extension_window: 172800
blazar_usage_default_allocated: 20000.0
# Redis currently binds on public IP, use public FQDN
blazar_usage_db_host: "{{ kolla_external_fqdn }}"
blazar_usage_project_exemptions: []
blazar_external_service_check_create_endpoint: "{{ chameleon_portal_url }}/api/balance_service/v2/check-create/"
blazar_external_service_check_update_endpoint: "{{ chameleon_portal_url }}/api/balance_service/v2/check-update/"
blazar_external_service_on_end_endpoint: "{{ chameleon_portal_url }}/api/balance_service/v2/on-end/"
blazar_floatingip_billrate: 0.0
# TODO: support looking up network with this name and fetching ID
# blazar_floatingip_reservation_network: public
blazar_database_name: blazar
blazar_database_user: blazar
blazar_database_port: "{{ database_port }}"
blazar_email_relay: "127.0.0.1"
blazar_api_allocation_extras: user_name
blazar_host_default_resource_properties: '["=", "\$node_type", "compute_skylake"]'
blazar_host_retry_without_default_resources: yes
blazar_network_default_resource_properties: '["=", "\$stitch_provider", "none"]'
blazar_network_retry_without_default_resources: no
blazar_floatingip_reservation_network_regex: "[pP]ublic"
blazar_host_url_format: "https://chameleoncloud.org/hardware/node/sites/{{ chameleon_site_name }}/clusters/chameleon/nodes/{hypervisor_hostname}/"

# Cinder
enable_cinder: no

# Doni
enable_doni: yes

# Glance
enable_glance: yes
glance_file_datadir_volume: /var/lib/glance
glance_backend_file: yes
glance_backend_swift: "{{ enable_swift }}"
# TODO: remove glance_backends after upgrade kolla-ansible to xena
glance_backends:
  - name: file
    type: file
    enabled: "{{ glance_backend_file | bool }}"
  - name: "swift"
    type: "swift"
    enabled: "{{ glance_backend_swift | bool }}"

# Hammers
hammers_openstack_user: "{{ keystone_admin_user }}"
hammers_openstack_password: "{{ keystone_admin_password }}"
hammers_openstack_project_name: "{{ keystone_admin_project }}"

# HAProxy
enable_haproxy: yes
haproxy_listen_neutron_server_extra: ["timeout server 15m"]
haproxy_service_template: "haproxy_single_service_split.cfg.j2"
kolla_external_fqdn_cert: "{{ cc_ansible_site_dir }}/certificates/haproxy.pem"

# Heat
enable_heat: yes

# Horizon
enable_horizon: yes
horizon_url: "{{ public_protocol }}://{{ kolla_external_fqdn | put_address_in_context('url') }}"
# Keep this to 'no' until we have switched from old multi-region to new
# multi-keystone model (with federation).
horizon_use_keystone_internal_url: no
horizon_help_url: https://www.chameleoncloud.org/user/help/
horizon_documentation_url: https://chameleoncloud.readthedocs.io/en/latest/technical/gui.html
horizon_redirect_root: /dashboard
horizon_regions:
  - region_name: "{{ openstack_region_name }}"
    chameleon_site_name: "{{ chameleon_site_name }}"
    blazar_database_host: "{{ kolla_internal_fqdn }}"
    blazar_database_name: "{{ blazar_database_name }}"
    blazar_database_port: "{{ blazar_database_port }}"
    blazar_database_user: "{{ blazar_database_user }}"
    blazar_database_password: "{{ blazar_database_password }}"

# Keystone IdP federation
identity_provider_key: "{{ 'EABNO4wxhX0ZOryErTXnWPUkCAcWxTFHwZ6f_zjDHLg' if keycloak_hostname == 'auth.dev.chameleoncloud.org' else '02GplnOEWB4gwqrZDyyiaNdIrhgdinNnObXcPHy2RTo' }}"
identity_provider_url: "{{ keycloak_url }}/auth/realms/{{ keycloak_realm_name }}"
identity_provider_name: chameleon
identity_provider_domain_name: chameleon
keystone_idp_client_id: null
enable_keystone_federation: "{{ keystone_idp_client_id is truthy }}"
keystone_enable_federation_openid: "{{ enable_keystone_federation }}"
keystone_identity_providers:
  - name: "{{ identity_provider_name }}"
    openstack_domain: "{{ identity_provider_domain_name }}"
    protocol: openid
    identifier: "{{ identity_provider_url }}"
    public_name: Login with Chameleon
    attribute_mapping: chameleon_mapping
    metadata_folder: "{{ node_custom_config }}/keystone/federation/metadata"
    certificate_file: "{{ node_custom_config }}/keystone/federation/{{ identity_provider_key }}.pem"
keystone_identity_mappings:
  - name: chameleon_mapping
    file: "{{ node_custom_config }}/keystone/idp_mapping.json"
keystone_federation_oidc_allowed_redirects:
  - "^{{ horizon_url }}/"
  - "^{{ keystone_public_url }}/"
  - "^{{ identity_provider_url }}/"

# Ironic
enable_ironic: yes
enable_ironic_ipxe: yes
ironic_provisioning_network: ironic-provisioning
ironic_provisioning_network_cidr: 10.51.0.0/24
ironic_provisioning_network_gateway: "{{ ironic_provisioning_network_cidr | ipaddr('next_usable') }}"
ironic_cleaning_network: "{{ ironic_provisioning_network }}"
ironic_image_cache_size: 20480 # MB
ironic_console_serial_speed: 115200n8
encoded_ironic_pxe_root_password: "{{ ironic_pxe_root_password | password_hash('md5') |  regex_replace( '(\\$)', '$\\1') }}"
ironic_pxe_append_params: nofb nomodeset vga=normal console=tty0 console=ttyS0,{{ ironic_console_serial_speed }} systemd.journald.forward_to_console=yes rootpwd="{{ encoded_ironic_pxe_root_password }}"

# number of times to retry failed neutron api requests
# will use exponential backoff from 0.5s up to 60s, or
# will use ironic_neutron_status_code_retry_delay if set
ironic_neutron_status_code_retries: 10

# Defaults for inspection network, currently unused
ironic_dnsmasq_dhcp_range: "10.52.0.10,10.52.0.200,255.255.255.0"

#ironic_ks_services:
#  - name: "ironic"
#    type: "baremetal"
#    description: "Ironic baremetal provisioning service"
#    endpoints:
#      - {'interface': 'admin', 'url': '{{ ironic_admin_endpoint }}'}
#      - {'interface': 'internal', 'url': '{{ ironic_internal_endpoint }}'}
#      - {'interface': 'public', 'url': '{{ ironic_public_endpoint }}'}

# Keycloak
enable_keycloak: no
enable_keycloak_tas_sync: no
enable_keycloak_external: "{{ enable_keycloak }}"
enable_keycloak_external_frontend: no
keycloak_realm_name: chameleon
keycloak_hostname: auth.chameleoncloud.org
keycloak_url: "https://{{ keycloak_hostname }}"

# Keystone
enable_keystone: yes
keystone_admin_project: openstack
# The following are needed for defaults for the Glance backup roles
# (site-configs derive from these)
keystone_admin_username: admin
keystone_admin_project_name: "{{ keystone_admin_project }}"
keystone_user_domain: default
keystone_project_domain: default
keystone_authversion: 3
openstack_keystone_auth_url: "{{ internal_protocol }}://{{ kolla_internal_fqdn }}:{{ keystone_public_port }}"

# JupyterHub
enable_jupyterhub: no
enable_jupyterhub_external: "{{ enable_jupyterhub }}"
enable_jupyterhub_external_frontend: "{{ enable_jupyterhub_external }}"

# Neutron
enable_neutron: yes
enable_openvswitch: yes
enable_neutron_fwaas: no
neutron_fwaas_version: v2
# Enable notifications for Experiment Precis
neutron_notification_topics:
  - name: notifications
    enabled: yes
neutron_type_drivers: flat,vlan
neutron_tenant_network_types: vlan
# Only relevant when running in debug mode, but allows
# debugging the NGS plugin.
neutron_dev_plugins:
  - name: networking-generic-switch
    git_repository: https://github.com/ChameleonCloud/networking-generic-switch
    source_version: "chameleoncloud/{{ openstack_release }}"
    packages:
      - networking_generic_switch

# Nova
enable_nova: yes
enable_nova_serialconsole_proxy: yes
nova_compute_virt_type: kvm
# We are not using any VNC consoles; the serialproxy is not considered a 'nova_console'
nova_console: none
# We override the endpoints to not include %(tenant_id)s placeholder.
# Blazar in particular needs this to not be scoped to the tenant because when
# it tries to perform actions on behalf of a user, it uses a different tenant
# id (its own).
nova_admin_endpoint: "{{ admin_protocol }}://{{ kolla_internal_fqdn }}:{{ nova_api_port }}/v2.1"
nova_internal_endpoint: "{{ internal_protocol }}://{{ kolla_internal_fqdn }}:{{ nova_api_port }}/v2.1"
nova_public_endpoint: "{{ public_protocol }}://{{ kolla_external_fqdn }}:{{ nova_api_port }}/v2.1"
enable_preemptible: no

# Portal
enable_portal: no
# This should be in defaults b/c it may be used by other roles,
# not just the portal role
portal_nginx_conf_dir: /opt/chameleon/conf.d
# The docker-compose network name for the Portal stack
portal_network: portal
chameleon_portal_mysql_host: udcc-db01.tacc.utexas.edu
chameleon_portal_mysql_user: chameleon_ro
chameleon_portal_mysql_database: chameleon_prod

# Experient Precis
enable_precis: no

# Prometheus
enable_prometheus: yes
enable_prometheus_external: no
prometheus_port: "9090"
prometheus_user: "prometheus"
prometheus_jupyterhub_exporter_token:
prometheus_alertmanager_slack_channel: "#notifications"
prometheus_openstack_exporter_interval: 5m
prometheus_openstack_exporter_timeout: 30s
prometheus_openstack_exporter_cmdline_extras: >-
  --disable-slow-metrics
  --disable-service.compute
  --disable-service.volume
  --disable-service.load-balancer
  --disable-service.dns
# Legacy params
prometheus_server_external_url: "{{ public_protocol }}://{{ prometheus_external_fqdn }}:{{ prometheus_port }}"
prometheus_alertmanager_external_url: "{{ public_protocol }}://{{ prometheus_external_fqdn }}:{{ prometheus_alertmanager_port }}"
prometheus_bind_address: "{{ lookup('vars', 'ansible_' + network_interface).ipv4.address }}"

# Redfish Monitor
redfish_monitor_openstack_user: "{{ keystone_admin_username }}"
redfish_monitor_openstack_password: "{{ keystone_admin_password }}"
redfish_monitor_openstack_project_name: "{{ keystone_admin_project }}"

# Swift
rgw_port: 7480 # Override non-standard KA default of 6780
# Disable complete rgw compatibility for now. If Ceph has these options set,
# it is considered "compatible":
#   rgw_swift_url_prefix = "/"
#   rgw_enable_apis = swift,swift_auth,admin
#   rgw_swift_enforce_content_length = true
# This just means we expose swift on the /swift path prefix from Ceph, as it
# is also supporting S3's API on a different path prefix.
ceph_rgw_compatibility: no
swift_keystone_user: ceph # For legacy reasons, this is different than default
enable_swift: no
enable_swift_rgw: no

# Monitoring
# TODO: install ES curator
enable_central_logging: yes
es_heap_size: 8G
# Includes log4j safeguard: https://github.com/elastic/elasticsearch/issues/81618
es_java_opts: "-Xms{{ es_heap_size }} -Xmx{{ es_heap_size }} -Dlog4j2.formatMsgNoLookups=true"
es_enable_painless_regex: no
enable_grafana: no

# External Ceph
enable_ceph: no

# Container services (Zun and supporting)
enable_k3s: no
enable_zun: no
enable_zun_compute_k8s: "{{ enable_zun | bool and enable_k3s | bool }}"
# If not running K3s, can run standard Zun deploy w/ etcd and kuryr
enable_etcd: "{{ enable_zun | bool and not enable_k3s | bool }}"
enable_kuryr: "{{ enable_zun | bool and not enable_k3s | bool }}"
enable_zun_compute: "{{ enable_zun | bool and not enable_k3s | bool }}"

# OSG
enable_osg: no

# usage reporting
enable_usage_reporting: no

# image tools
enable_image_deployer: no
enable_image_cleaner: no

# Manila
default_share_type: cephfsnfstype
