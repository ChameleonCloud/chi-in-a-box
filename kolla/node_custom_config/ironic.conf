[DEFAULT]

# `enabled_` sets valid choices. `default_` will be used if not set on a given node

# Hardware types set what options are valid below
enabled_hardware_types = ipmi

# Enable isolated tenant networking
enabled_network_interfaces = neutron,flat
default_network_interface = neutron

# enable iPXE boot
enabled_boot_interfaces = ipxe,pxe
default_boot_interface = ipxe

# enable serial console for baremetal instances
enabled_console_interfaces = ipmitool-socat,no-console
default_console_interface = ipmitool-socat

enabled_management_interfaces = ipmitool,noop

enabled_inspect_interfaces = no-inspect,inspector
default_inspect_interface = inspector

# force instances to have a config_drive added, necessary for cloud-init networking
# see https://docs.openstack.org/ironic/xena/install/configdrive.html
force_config_drive=True

[console]
port_range = 40000:50000

[conductor]
# We do not perform automated cleaning to improve turnaround time on a node.
automated_clean = False

{% if enable_prometheus_ironic_exporter | bool %}
send_sensor_data = True
send_sensor_data_interval = "{{ ironic_send_sensor_data_interval }}"
send_sensor_data_for_undeployed_nodes = "{{ ironic_send_sensor_data_for_undeployed_nodes }}"
{% endif %}

# deploy kernel and ramdisk to use if not set on node
{% if ironic_deploy_kernel is defined %}
deploy_kernel = "{{ ironic_deploy_kernel }}"
{% endif %}
{% if ironic_deploy_ramdisk is defined %}
deploy_ramdisk = "{{ ironic_deploy_ramdisk }}"
{% endif %}

[deploy]
default_boot_option = local

[inspector]
require_managed_boot = True
# passed to ironic-python-agent, see :
# https://docs.openstack.org/ironic-python-agent/latest/admin/how_it_works.html#inspection
extra_kernel_params = "ipa-inspection-collectors=default,pci-devices,dmi-decode,numa-topology,logs ipa-collect-lldp=1"

[neutron]
cleaning_network = "{{ ironic_cleaning_network }}"
provisioning_network = "{{ ironic_provisioning_network }}"
inspection_network = "{{ ironic_inspection_network }}"

{% if ironic_neutron_status_code_retries is defined %}
status_code_retries = "{{ ironic_neutron_status_code_retries }}"
{% endif %}
{% if ironic_neutron_status_code_retry_delay is defined %}
status_code_retry_delay = "{{ ironic_neutron_status_code_retry_delay }}"
{% endif %}

[oslo_messaging_notifications]
# Experiment Precis requires 2.0 message format, i.e. set driver to messagingv2
driver = messagingv2

# driver is a list, but ini merging breaks that. Set it again here.
{% if enable_prometheus_ironic_exporter | bool %}
driver = prometheus_exporter
location = /opt/stack/node_metrics
{% endif %}

[pxe]
pxe_append_params = "{{ ironic_pxe_append_params }}"
image_cache_size = "{{ ironic_image_cache_size }}"
ipxe_bootfile_name_by_arch = aarch64:aarch64/snponly.efi
# [ech] Still needed for ARM? pxe_bootfile_name_by_arch = aarch64:shimaa64.efi

[agent]
deploy_logs_collect = on_failure

[keystone]
region_name = "{{ openstack_region_name }}"
