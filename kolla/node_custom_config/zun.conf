[DEFAULT]
# Enable launching containers w/ no constraints
minimum_cpus = 0
minimum_memory = 0
minimum_disk = 0
# Default to requesting containers with no constraints
default_cpu = 0.0
default_memory = 0
default_disk = 0
{% if enable_zun_compute_k8s | bool %}
# We support containers, but not capsules when k8s driver is in use.
container_driver = k8s
capsule_driver = fake
# Change from default of 60 seconds; for k8s this is a cheap operation and the UX
# is better with a tighter sync interval.
sync_container_state_interval = 15
{% endif %}

[compute]
host_shared_with_nova = {% if enable_nova | bool %}true{% else %}false{% endif %}

[oslo_messaging_rabbit]
# Currently needed (Xena) to avoid eventlet deadlock issue
heartbeat_in_pthread = false

[scheduler]
available_filters = zun.scheduler.filters.all_filters
enabled_filters = {% if enable_blazar | bool %}BlazarFilter,{% endif %}ComputeFilter,{% if not enable_zun_compute_k8s | bool %}RuntimeFilter{% endif %}

{% if enable_blazar | bool %}
[blazar:host]
allow_without_reservation = False
{% endif %}

{% if enable_zun_compute_k8s | bool %}
[k8s]
nvidia_require_jetpack = csv-mounts=all
nvidia_visible_devices = all
nvidia_driver_capabilities = all
enable_worker_taint = {{ zun_tolerate_worker_taint }}
worker_taint_key = {{ worker_taint.key }}
worker_taint_value = {{ worker_taint.value }}
worker_taint_effect = {{ worker_taint.effect }}
{% if enable_neutron | bool %}
neutron_network = caliconet
{% endif %}
device_profile_mappings = jetson_camera=smarter-devices/video0:1
device_profile_mappings = pi_camera=smarter-devices/video0:1,smarter-devices/vchiq:1,smarter-devices/vcsm-cma:1
device_profile_mappings = pi_gpio=smarter-devices/gpiomem:1
device_profile_mappings = pi_serial=smarter-devices/ttyACM0:1
device_profile_mappings = pi_meter=smarter-devices/ttyUSB0:1
{% endif %}
