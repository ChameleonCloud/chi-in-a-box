---
- hosts: docker_registry
  roles:
    - docker_registry
  tasks:
    - name: Set facts for gathering in frontend hosts.
      set_fact:
        docker_registry_hostname: "{{ docker_registry_hostname }}"
        docker_registry_port: "{{ docker_registry_port }}"
        docker_registry_push_users: "{{ docker_registry_push_users }}"
      tags:
        - configuration

- hosts: frontends
  tasks:
    - name: Configure virtual host for docker registry backend.
      block:
        - name: Gather facts from docker registry host.
          setup:
          delegate_to: "{{ groups.docker_registry[0] }}"
          delegate_facts: True
        - name: Precompute convenience facts needed for virtual host configuration.
          set_fact:
            docker_registry_hostname: "{{ hostvars[groups.docker_registry[0]].docker_registry_hostname }}"
            docker_registry_port: "{{ hostvars[groups.docker_registry[0]].docker_registry_port }}"
            docker_registry_push_users: "{{ hostvars[groups.docker_registry[0]].docker_registry_push_users }}"
            docker_registry_internal_address: "{{ groups.docker_registry[0] }}"
            docker_registry_readonly_user: "{{ hostvars[groups.docker_registry[0]].docker_registry_readonly_user }}"
            docker_registry_readonly_password: "{{ hostvars[groups.docker_registry[0]].docker_registry_readonly_password }}"
            docker_registry_htpasswd: "{{ apache_config_path }}/{{ hostvars[groups.docker_registry[0]].docker_registry_hostname }}.htpasswd"
        - name: Create password for readonly user.
          htpasswd:
            path: "{{ docker_registry_htpasswd }}"
            name: "{{ docker_registry_readonly_user }}"
            password: "{{ docker_registry_readonly_password }}"
            mode: 0640
        - name: Configure virtual host.
          include_role:
            name: apache
            tasks_from: host
          vars:
            apache_server_name: "{{ docker_registry_hostname }}"
            apache_server_conf: |
              ProxyPass        /v2 http://{{ docker_registry_internal_address }}:{{ docker_registry_port }}/v2
              ProxyPassReverse /v2 http://{{ docker_registry_internal_address }}:{{ docker_registry_port }}/v2

              <Location /v2>
                Order deny,allow
                Allow from all

                AuthType Basic
                AuthName "Docker Registry authentication"
                AuthBasicProvider file socache external
                AuthUserFile {{ docker_registry_htpasswd }}
                AuthExternal keystone-user
                AuthExternalProvideCache On
                AuthnCacheProvideFor keystone-user

                # Read access to all authentified users
                <Limit GET HEAD>
                  Require valid-user
                </Limit>

                # TODO: Write access to operators by group membership
                <Limit POST PUT DELETE PATCH>
                  Require user {{ docker_registry_push_users | join(' ') }}
                </Limit>
              </Location>
      tags:
        - configuration
