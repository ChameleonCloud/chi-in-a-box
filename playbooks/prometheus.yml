---
- hosts:
    - prometheus
    - prometheus-ceph-exporter
    - prometheus-mysqld-exporter
    - prometheus-openstack-exporter
  roles:
    - docker

- hosts:
    - prometheus
    - prometheus-ceph-exporter
    - prometheus-mysqld-exporter
    - prometheus-node-exporter
    - prometheus-openstack-exporter
  roles:
    - prometheus
  pre_tasks:
    - name: Set fact for internal host addresses.
      set_fact:
        ansible_internal_ipv4_addresses: >
          {{ { item.inventory_hostname: item.ansible_interfaces
             | map('regex_replace', '^', 'ansible_')
             | map('replace', '-', '_')
             | map('extract', item)
             | selectattr('ipv4', 'defined')
             | selectattr('ipv4.address', 'match', '10.*')
             | map(attribute='ipv4.address')
             | list | last} | combine(ansible_internal_ipv4_addresses | default({})) }}
      loop: "{{ ansible_play_hosts | map('extract', hostvars) | list }}"
      loop_control:
        label: "{{ item.inventory_hostname }}"
      when: inventory_hostname in groups[prometheus_services['server'].group]
  tasks:
    - name: Set facts for gathering in frontend hosts.
      set_fact:
        prometheus_alertmanager_hostname: "{{ prometheus_alertmanager_hostname }}"
        prometheus_alertmanager_port: "{{ prometheus_services['alertmanager'].port }}"
        prometheus_alertmanager_users: "{{ prometheus_alertmanager_users }}"
      tags:
        - configuration
      when: inventory_hostname in groups[prometheus_services['alertmanager'].group]

- hosts: frontends
  tasks:
    - name: Configure virtual host for Prometheus Alertmanager.
      block:
        - set_fact:
            prometheus_alertmanager: "{{ hostvars[groups['prometheus-alertmanager'][0]] }}"
        - name: Configure virtual host.
          include_role:
            name: apache
            tasks_from: host
          vars:
            apache_server_name: "{{ prometheus_alertmanager.prometheus_alertmanager_hostname }}"
            apache_server_conf: |
              <Location "/">
                Order deny,allow
                Allow from all

                AuthType Basic
                AuthName "Alertmanager authentication"
                AuthBasicProvider socache external
                AuthExternal keystone-user
                AuthExternalProvideCache On
                AuthnCacheProvideFor keystone-user

                Require user {{ prometheus_alertmanager.prometheus_alertmanager_users | join(' ') }}

                # preserve Host header to avoid cross-origin problems
                ProxyPreserveHost on
                # proxy to Alertmanager
                ProxyPass         http://{{ groups.prometheus[0] }}:{{ prometheus_alertmanager.prometheus_alertmanager_port }}/
                ProxyPassReverse  http://{{ groups.prometheus[0] }}:{{ prometheus_alertmanager.prometheus_alertmanager_port }}/
              </Location>
          tags:
            - configuration
