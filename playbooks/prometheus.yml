---
- hosts:
    - prometheus
    - prometheus-ceph-exporter
    - prometheus-mysqld-exporter
    - prometheus-openstack-exporter
    - prometheus-push-gateway
  roles:
    - docker

- hosts:
    - prometheus
    - prometheus-ceph-exporter
    - prometheus-jupyterhub-exporter
    - prometheus-mysqld-exporter
    - prometheus-node-exporter
    - prometheus-openstack-exporter
    - prometheus-push-gateway
  roles:
    - prometheus
  tasks:
    - set_fact:
        prometheus_alertmanager_port: "{{ prometheus_services['alertmanager'].port }}"
        prometheus_alertmanager_users: "{{ prometheus_alertmanager_users }}"
      when: inventory_hostname in groups[prometheus_services['alertmanager'].group]
    - set_fact:
        prometheus_server_port: "{{ prometheus_services['server'].port }}"
        prometheus_server_users: "{{ prometheus_server_users }}"
        prometheus_monitoring_user: "{{ prometheus_monitoring_user }}"
      when: inventory_hostname in groups[prometheus_services['server'].group]

- hosts: frontends
  tasks:
    - name: Configure virtual host for Prometheus server.
      block:
        - set_fact:
            prometheus_server: "{{ hostvars[groups['prometheus'][0]] }}"
        - name: Create password for readonly user.
          htpasswd:
            path: "/etc/httpd/prometheus_server.htpasswd"
            name: "{{ prometheus_server.prometheus_monitoring_user }}"
            password: "{{ prometheus_monitoring_password }}"
            mode: 0640
        - name: Configure virtual host.
          include_role:
            name: apache
            tasks_from: host
          vars:
            apache_server_alias: prometheus_server
            apache_server_name: "{{ prometheus_server_hostname }}"
            apache_server_https_port: 9090
            apache_server_http_port: null
            apache_server_conf: |
              <Location "/">
                Order deny,allow
                Allow from all

                AuthType Basic
                AuthName "Prometheus authentication"
                AuthBasicProvider file socache external
                AuthUserFile /etc/httpd/prometheus_server.htpasswd
                AuthExternal keystone-user
                AuthExternalProvideCache On
                AuthnCacheProvideFor keystone-user

                # preserve Host header to avoid cross-origin problems
                ProxyPreserveHost on
                # proxy to Alertmanager
                ProxyPass         http://{{ groups['prometheus'][0] }}:{{ prometheus_server.prometheus_server_port }}/
                ProxyPassReverse  http://{{ groups['prometheus'][0] }}:{{ prometheus_server.prometheus_server_port }}/

                # Read access to monitoring user + admins
                <Limit GET HEAD>
                  Require user {{ prometheus_server.prometheus_monitoring_user }} {{ prometheus_server.prometheus_server_users | join(' ') }}
                </Limit>

                # TODO: Write access to operators by group membership
                <Limit POST PUT DELETE PATCH>
                  Require user {{ prometheus_server.prometheus_server_users | join(' ') }}
                </Limit>
              </Location>
          when: prometheus_server_hostname is defined
    - name: Configure virtual host for Prometheus Alertmanager.
      block:
        - set_fact:
            prometheus_alertmanager: "{{ hostvars[groups['prometheus-alertmanager'][0]] }}"
        - name: Configure virtual host.
          include_role:
            name: apache
            tasks_from: host
          vars:
            apache_server_alias: prometheus_alertmanager
            apache_server_name: "{{ prometheus_alertmanager_hostname }}"
            apache_server_conf: |
              <Location "/">
                Order deny,allow
                Allow from all

                AuthType Basic
                AuthName "Alertmanager authentication"
                AuthBasicProvider socache external
                AuthExternal keystone-user
                AuthExternalProvideCache On
                AuthnCacheProvideFor keystone-user

                Require user {{ prometheus_alertmanager.prometheus_alertmanager_users | join(' ') }}

                # preserve Host header to avoid cross-origin problems
                ProxyPreserveHost on
                # proxy to Alertmanager
                ProxyPass         http://{{ groups['prometheus-alertmanager'][0] }}:{{ prometheus_alertmanager.prometheus_alertmanager_port }}/
                ProxyPassReverse  http://{{ groups['prometheus-alertmanager'][0] }}:{{ prometheus_alertmanager.prometheus_alertmanager_port }}/
              </Location>
          when: prometheus_alertmanager_hostname is defined
