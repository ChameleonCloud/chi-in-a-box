---
- name: Pull Keycloak images.
  docker_image:
    source: pull
    name: "{{ item.value.image }}"
    force_source: yes
  loop: "{{ keycloak_services|dict2items }}"
  loop_control:
    label: "{{ item.value.image }}"
  tags:
    - pull
  when:
    - inventory_hostname in groups[item.value.group]

- name: Create Keycloak network.
  docker_network:
    name: "{{ keycloak_docker_network }}"
    ipam_config:
      - subnet: "{{ keycloak_docker_network_subnet }}"
  when:
    - inventory_hostname in groups.keycloak_server

- name: Configure Keycloak services.
  include_role:
    name: chameleon.docker_service
  vars:
    service_name: "{{ item.key }}"
    service_bind_address: "{{ api_interface_address }}"
    docker_image: "{{ item.value.image }}"
    docker_network: "{{ item.value.network }}"
    docker_environment: "{{ item.value.environment }}"
    docker_mounts: "{{ item.value.mounts }}"
    docker_ports: "{{ item.value.ports|default([]) }}"
    docker_command: "{{ item.value.command|default(None) }}"
  loop: "{{ keycloak_services|dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  when:
    - inventory_hostname in groups[item.value.group]

- name: Configure haproxy for Keycloak
  import_role:
    name: haproxy-config
  vars:
    project_services: "{{ keycloak_services }}"
  when: enable_haproxy | bool

- name: Create periodic realm export script.
  copy:
    src: keycloak_backup_realm.sh
    dest: /usr/local/sbin/keycloak_backup_realm.sh
    mode: "0700"
  when:
    - inventory_hostname in groups[keycloak_tasks.keycloak_realm_export.group]

- name: Pull Keycloak task images.
  docker_image:
    source: pull
    name: "{{ item.value.docker.image }}"
    force_source: yes
  loop: "{{ keycloak_tasks|dict2items }}"
  loop_control:
    label: "{{ (item.value.docker | default({})).image|default(None) }}"
  when:
    - item.value.docker is defined
    - inventory_hostname in groups[item.value.group]
  tags:
    - pull

- name: Configure Keycloak periodic tasks.
  include_role:
    name: chameleon.periodic_task
  vars:
    task_name: "{{ item.key }}"
    task_calendar: "{{ item.value.calendar }}"
    task_command: "{{ item.value.command|default(None) }}"
    task_docker: "{{ item.value.docker|deafult(None) }}"
  loop: "{{ keycloak_tasks|dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  when:
    - inventory_hostname in groups[item.value.group]
