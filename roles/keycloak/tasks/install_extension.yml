---
- name: "Check if desired version of {{ item.artifact_id }} exists"
  stat:
    path: "{{ keycloak_extension_path }}/{{ item.artifact_id }}-{{ item.version }}.jar"
  register: extension
- name: "Find current versions for {{ item.artifact_id }}"
  find:
    paths: ["{{ keycloak_extension_path }}"]
    patterns: "{{ item.artifact_id }}-*.jar"
  register: existing_extensions
  when: not extension.stat.exists
- name: Fetch extension jar files
  maven_artifact:
    group_id: "{{ item.group_id }}"
    artifact_id: "{{ item.artifact_id }}"
    version: "{{ item.version }}"
    repository_url: "{{ item.repository_url }}"
    username: "{{ item.username }}"
    password: "{{ item.password }}"
    mode: "0644"
    dest: "{{ keycloak_extension_path }}/"
- name: "Clean up old {{ item.artifact_id }} extension versions"
  file:
    path: "{{ existing_item.path }}"
    state: absent
  loop: "{{ existing_extensions.files }}"
  loop_control:
    # Use different loop var to avoid collision with 'item' already in scope
    loop_var: existing_item
  when: not extension.stat.exists
