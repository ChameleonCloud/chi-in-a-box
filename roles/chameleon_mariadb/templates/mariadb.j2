#!/bin/bash
#
# MySQL Backup Script
#  Dumps mysql databases to a file for another backup tool to pick up.
#
# MySQL code:
# GRANT SELECT, RELOAD, LOCK TABLES ON *.* TO 'user'@'localhost'
# IDENTIFIED BY 'password';
# FLUSH PRIVILEGES;
#
##### START CONFIG ###################################################

USER="{{ mariadb_backup_user }}"
PASS="{{ mariadb_backup_pw }}"
MAX_ALLOWED_PACKET="{{ mariadb_backup_max_packet }}"
DIR="{{ mariadb_backup_origin_dir }}"
ROTATE="{{ mariadb_backup_file_age }}"

# Create temporary mysql cnf file.
TMPFILE=`mktemp /tmp/backup.XXXXXX` || exit 1
echo -e "[client]\npassword=$PASS\nuser=$USER\nmax_allowed_packet=$MAX_ALLOWED_PACKET" > $TMPFILE


# Ensure backup directory exist.
mkdir -p $DIR

PREFIX=mysql_backup_

ADDITIONAL_OPTIONS="--ignore-table=mysql.event"


##### STOP CONFIG ####################################################
PATH=/usr/bin:/usr/sbin:/bin:/sbin



set -o pipefail

cleanup()
{
        find "${DIR}/" -maxdepth 1 -type f -name "${PREFIX}*.sql*" -mtime +${ROTATE} -print0 | xargs -0 -r rm -f
}

mysqldump --defaults-extra-file=$TMPFILE --opt --flush-logs --single-transaction \
 ${ADDITIONAL_OPTIONS} \
 --all-databases | bzcat -zc > ${DIR}/${PREFIX}`date +%Y%m%d-%H%M%S`.sql.bz2

if [ $? -eq 0 ] ; then
    cleanup
    touch /tmp/mysqlbackup_success
fi

rsync -vrlptz ${DIR} "{{ mariadb_backup_destination_host }}":"{{ mariadb_backup_destination_dir }}" 2>&1 | /usr/bin/logger -t "{{ mariadb_backup_log_key }}" && ssh "{{ mariadb_backup_destination_host }}" 'find {{ mariadb_backup_destination_dir }}* -maxdepth 2 -mtime "{{ mariadb_backup_retention }}" -exec rm {} \;'

# Remove temporary file
rm -f $TMPFILE


