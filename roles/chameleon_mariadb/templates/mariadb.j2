#!/bin/bash
#
# MySQL Backup Script

set -euo pipefail

# mariadb backup is handled by kolla. just do cleanups here.
ROTATE="{{ mariadb_backup_file_age }}"
BACKUP_VOLUME="{{ backup_location }}"

PREFIX=mysqlbackup-

cleanup() {
  # on exit, rotate backups keeping the last $ROTATE days
  docker run -u 0 --rm -v ${BACKUP_VOLUME}:/backup "{{ kolla_toolbox_image_full }}" \
  /bin/bash -c \
  "find /backup -maxdepth 1 -type f -name "${PREFIX}*" -mtime +${ROTATE} -print0 | xargs -0 -r rm -v -f"
}


trap cleanup EXIT

backup_to_s3() {
  # note: network=host is required when running on kolla control-plane hosts
  # see "Docker iptables manipulation and bridge networking are now disabled by default"
  # as per kolla-ansible wallaby upgrade notes

  # see https://rclone.org/docs/#config-file for env_var syntax
  docker run --rm \
    --network host \
    -e  "RCLONE_CONFIG_S3_TYPE=s3" \
    -e  "RCLONE_CONFIG_S3_PROVIDER=Ceph" \
    -e  "RCLONE_CONFIG_S3_ENDPOINT={{ mariadb_backup_s3_endpoint }}" \
    -e  "RCLONE_CONFIG_S3_ACCESS_KEY_ID={{ mariadb_backup_s3_key_id }}" \
    -e  "RCLONE_CONFIG_S3_SECRET_ACCESS_KEY={{ mariadb_backup_s3_key }}" \
    -v "${BACKUP_VOLUME}:/backups:ro" \
    "{{ rclone_image }}" \
    "${@}"
}

backup_to_s3 -v \
	copy \
	--ignore-existing \
	"/backups/" \
	"s3:/{{ mariadb_backup_bucket_name }}"
