{% set alertmanager_service = prometheus_services['alertmanager'] %}
{% set alertmanager_vars = hostvars[groups[alertmanager_service.group][0]] %}
{% set snmp_exporter_service = prometheus_services['snmp-exporter'] %}
{% set snmp_exporter_vars = hostvars[groups[snmp_exporter_service.group][0]] %}
{% set snmp_exporter_switches = switch_configs | selectattr('snmp', 'defined') | list %}
---
global:
  scrape_interval:     30s
  evaluation_interval: 30s

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets: ['{{ alertmanager_vars['ansible_' + alertmanager_vars['network_interface']]['ipv4']['address'] }}:{{ alertmanager_service.port }}']

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - '/etc/prometheus/rules/*.yml'

scrape_configs:
{% for name, service in prometheus_services.iteritems() %}
{% if service.scrape_target | bool and groups[service.group] | length > 0 %}
- job_name: '{{ name }}'
{% if service.scrape_interval is defined %}
  scrape_interval: {{ service.scrape_interval }}
{% endif %}
{% if service.bearer_token_file is defined %}
  bearer_token_file: {{ service.bearer_token_file }}
{% endif %}
  static_configs:
{% for host in groups[service.group] %}
  - targets: ['{{ hostvars[host]['ansible_' + hostvars[host]['network_interface']]['ipv4']['address'] }}:{{ service.port }}']
    labels:
      hostname: '{{ host }}'
{% endfor %}
{% endif %}
{% endfor %}
{% for switch in snmp_exporter_switches %}
- job_name: '{{ switch.name }}'
  scrape_interval: 2m
  scrape_timeout: 2m
  static_configs:
  - targets:
      - '{{ switch.address }}'
    labels:
  metrics_path: /snmp
  params:
    module:
      - '{{ switch.device_type }}'
  relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: '{{ snmp_exporter_vars['ansible_' + snmp_exporter_vars['network_interface']]['ipv4']['address'] }}:{{ snmp_exporter_service.port }}'
{% endfor %}
