# {{ ansible_managed }}
#
# To troubleshoot and get more log info enable ldap debug logging via
# GF_LOG_FILTERS=ldap:debug

[[servers]]
host = "{{ grafana_auth_ldap_hostname }}"
port = {{ grafana_auth_ldap_port }}
use_ssl = false
start_tls = false
ssl_skip_verify = false

# Bind as authenticating user directly
bind_dn = "uid=%s,{{ grafana_auth_ldap_user_treebase }}"

search_filter = "{{ grafana_auth_ldap_user_search_filter }}"
search_base_dns = ["{{ grafana_auth_ldap_user_treebase }}"]
group_search_filter = "{{ grafana_auth_ldap_group_search_filter }}"
group_search_base_dns = ["{{ grafana_auth_ldap_group_treebase }}"]

[servers.attributes]
name = "givenName"
surname = "sn"
username = "cn"
email = "mail"
# This is required to be set to "cn" in order for Grafana to perform the
# secondary group look up with the custom filters we defined above.
# Otherwise it tries to use whatever `memberOf` it can find in the directory,
# which we don't want to do in most cases due to lack of support.
member_of = "cn"

# Chameleon org
[[servers.group_mappings]]
group_dn = "{{ grafana_auth_ldap_editor_group }}"
org_role = "Admin"
org_id = 1

# Chameleon-Users org
[[servers.group_mappings]]
group_dn = "{{ grafana_auth_ldap_editor_group }}"
org_role = "Editor"
org_id = 2

[[servers.group_mappings]]
group_dn = "*"
org_role = "Viewer"
org_id = 2
