---
- name: Authenticate to Docker registry
  become: True
  docker_login:
    registry_url: "{{ docker_registry }}"
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"

- name: Pull Docker image.
  become: True
  docker_image:
    source: pull
    name: "{{ chameleon_usage_docker_image }}"
    force_source: yes

- name: Create config directory.
  become: yes
  file:
    path: "{{ chameleon_usage_config_dir }}"
    state: directory

- name: Configure my.cnf
  become: yes
  template:
    src: my.cnf.j2
    dest: "{{ chameleon_usage_config_dir }}/my.cnf"
  vars:
    mysql_host: "{{ database_address }}"
    root_password: "{{ database_password }}"
    
- name: Configure site.yaml
  become: yes
  template:
    src: site.yaml.j2
    dest: "{{ chameleon_usage_config_dir }}/site.yaml"

- name: Create MySQL user
  become: true
  kolla_toolbox:
    module_name: mysql_user
    module_args:
      login_host: "{{ database_address }}"
      login_password: "{{ database_password }}"
      login_user: "{{ database_user }}"
      name: "{{ chameleon_usage_mysql_user }}"
      host: "%"
      password: "{{ chameleon_usage_mysql_password }}"
      priv: "{{ all_privileges | join('/') }}"
  run_once: True
  # Delegate to control node, which we can safely assume is running at least
  # one Kolla service, and therefore already has the kolla_toolbox container
  # running on the host.
  delegate_to: "{{ groups['control'][0] }}"
  vars:
    all_privileges:
      - 'blazar_backup\_%.*:ALTER,CREATE,DROP,SELECT,INSERT'
      - 'keystone_backup\_%.*:ALTER,CREATE,DROP,SELECT,INSERT'
      - 'nova_backup\_%.*:ALTER,CREATE,DROP,SELECT,INSERT'
      - 'ironic_backup\_%.*:ALTER,CREATE,DROP,SELECT,INSERT'
      - 'chameleon_usage.*:CREATE,SELECT,INSERT,UPDATE,DELETE'
      - 'blazar.*:SELECT'
      - 'ironic.*:SELECT'
      - 'keystone.*:SELECT'
      - 'nova.*:SELECT'

- name: Initialize chameleon_usage database
  command: |
    docker run --rm --net=host \
    -v "{{ chameleon_usage_config_dir }}/my.cnf:/etc/mysql/my.cnf" \
    {{ chameleon_usage_docker_image }} setup_database --mysql-conf /etc/mysql/my.cnf

- name: Configure chameleon usage data extract docker bash wrapper
  become: yes
  template:
    src: chameleon-usage-extract-data.j2
    mode: 0700
    dest: /usr/local/sbin/chameleon-usage-extract-chi-data

- name: Set up node data extract periodic task
  include_role:
    name: chameleon.periodic_task
    apply:
      become: yes
  vars:
    task_name: "usage_node"
    task_command: "/usr/local/sbin/chameleon-usage-extract-chi-data"
    task_calendar: "09:00"

- name: Configure slack webhook file
  become: yes
  template:
    src: slack.json.j2
    mode: 0600
    dest: "{{ chameleon_usage_config_dir }}/slack.json"
  when: slack_api_url is defined

- name: Configure chameleon node usage sanity checks docker bash wrapper
  become: yes
  template:
    src: chameleon-usage-sanity-checks.j2
    mode: 0700
    dest: /usr/local/sbin/chameleon-usage-sanity-checks

- name: Set up node data sanity check periodic task
  include_role:
    name: chameleon.periodic_task
    apply:
      become: yes
  vars:
    task_name: "usage_node_sanity"
    task_command: "/usr/local/sbin/chameleon-usage-sanity-checks"
    task_calendar: "10:00"
