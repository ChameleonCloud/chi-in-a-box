---
- name: Pull JupyterHub images.
  docker_image:
    source: pull
    name: "{{ item.value.image }}"
    force_source: yes
  loop: "{{ jupyterhub_services|dict2items }}"
  loop_control:
    label: "{{ item.value.image }}"
  tags:
    - pull
  when:
    - inventory_hostname in groups[item.value.group]

- name: Pull Notebook image.
  docker_image:
    source: pull
    name: "{{ jupyterhub_notebook_image_full }}"
    force_source: yes
  tags:
    - pull

- name: Create Docker network.
  docker_network:
    name: "{{ jupyterhub_docker_network }}"
    ipam_config:
      - subnet: "{{ jupyterhub_docker_network_subnet }}"

- include_tasks: ceph.yml
  when: jupyterhub_enable_ceph | bool

- import_role:
    name: service-ks-register
  vars:
    project_name: jupyterhub
    service_ks_register_auth: "{{ jupyterhub_auth }}"
    service_ks_register_services: "{{ jupyterhub_ks_services }}"
    service_ks_register_users: "{{ jupyterhub_ks_users }}"

- name: Configure JupyterHub services.
  include_role:
    name: chameleon.docker_service
  vars:
    service_name: "{{ item.key }}"
    service_bind_address: "{{ api_interface_address }}"
    docker_image: "{{ item.value.image }}"
    docker_network: "{{ item.value.network }}"
    docker_environment: "{{ item.value.environment }}"
    docker_mounts: "{{ item.value.mounts }}"
    docker_ports: "{{ item.value.ports|default([]) }}"
    docker_command: "{{ item.value.command|default(None) }}"
  loop: "{{ jupyterhub_services|dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  when:
    - inventory_hostname in groups[item.value.group]
