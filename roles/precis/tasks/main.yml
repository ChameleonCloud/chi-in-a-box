---
- name: Create cep service
  kolla_toolbox:
    module_name: os_keystone_service
    module_args:
      name: cep
      service_type: cep
      auth: "{{ openstack_auth }}"
      description: "Chameleon Experiment Precis"
      region_name: "{{ openstack_region_name }}"
  delegate_to: "{{ groups['control'][0] }}"
  run_once: True

- name: Create cep endpoint
  kolla_toolbox:
    module_name: os_keystone_endpoint
    module_args:
      service: cep
      auth: "{{ openstack_auth }}"
      url: "https://{{ kolla_external_fqdn }}:{{ precis_endpoint_port }}"
      endpoint_interface: public
      region: "{{ openstack_region_name }}"
      region_name: "{{ openstack_region_name }}"
  delegate_to: "{{ groups['control'][0] }}"
  run_once: True

- name: Create RabbitMQ entities.
  block:
    - name: Create RabbitMQ user.
      delegate_to: "{{ groups[precis_rabbitmq_inventory_group][0] }}"
      run_once: True
      kolla_toolbox:
        module_name: rabbitmq_user
        module_args:
          user: "{{ precis_rabbitmq_user }}"
          password: "{{ precis_rabbitmq_password }}"
          vhost: /
          configure_priv: "^experiment_precis_.*"
          read_priv: ".*"
          write_priv: "^experiment_precis_.*|amq.default"
          state: present
        user: rabbitmq
    - name: Create RabbitMQ listener queue.
      delegate_to: "{{ groups[precis_rabbitmq_inventory_group][0] }}"
      run_once: True
      kolla_toolbox:
        module_name: rabbitmq_queue
        module_args:
          login_user: "{{ rabbitmq_user }}"
          login_password: "{{ rabbitmq_password }}"
          login_host: "{{ precis_rabbitmq_host }}"
          name: "{{ precis_rabbitmq_listener_queue }}"
          vhost: /
          durable: yes
          auto_delete: no
          state: present
    - name: Create RabbitMQ exchange bindings.
      delegate_to: "{{ groups[precis_rabbitmq_inventory_group][0] }}"
      run_once: True
      kolla_toolbox:
        module_name: rabbitmq_binding
        module_args:
          login_user: "{{ rabbitmq_user }}"
          login_password: "{{ rabbitmq_password }}"
          login_host: "{{ precis_rabbitmq_host }}"
          name: "{{ item }}"
          destination: "{{ precis_rabbitmq_listener_queue }}"
          destination_type: queue
          routing_key: "notifications.*"
          state: present
      loop: "{{ precis_rabbitmq_listener_bindings }}"
  tags:
    - rabbitmq

- name: Create MySQL user.
  delegate_to: "{{ groups[precis_mysql_inventory_group][0] }}"
  run_once: True
  kolla_toolbox:
    module_name: mysql_user
    module_args:
      login_host: "{{ precis_mysql_host }}"
      login_user: root
      login_password: "{{ database_password }}"
      name: "{{ precis_mysql_user }}"
      host: "%"
      password: "{{ precis_mysql_password }}"
      priv: "{{ precis_mysql_database }}.*:ALL/{{ precis_mysql_external_database_privileges | join('/') }}"
      state: present
  tags:
    - mysql

- name: Pull precis service container images.
  docker_image:
    source: pull
    name: "{{ item }}"
    state: present
    force_source: yes
  loop:
    - "{{ precis_init_docker_image }}"
    - "{{ precis_event_listener_docker_image }}"
    - "{{ precis_endpoint_docker_image }}"
    - "{{ precis_generator_docker_image }}"
  tags:
    - pull

- name: Create Docker network.
  docker_network:
    name: "{{ precis_docker_network }}"
    ipam_config:
      - subnet: "{{ precis_docker_network_subnet }}"
    state: present
  when: precis_docker_network != "host"

- name: Configure precis services.
  block:
    - name: Create config directory.
      file:
        path: "{{ precis_config_path }}"
        state: directory
    - name: Set default host addresses.
      when: vars[item.host_var] is not defined
      set_fact:
        "{{ item.host_var }}": >-
          {{ groups[vars[item.group_var]]
             | map('extract', hostvars, [network_interface, 'ipv4', 'address'])
             | list | first }}
      loop:
        - host_var: precis_mysql_host
          group_var: precis_mysql_inventory_group
        - host_var: precis_rabbitmq_host
          group_var: precis_rabbitmq_inventory_group
    - name: Set bind address.
      set_fact:
        precis_bind_address: "{{ ansible_facts[network_interface]['ipv4']['address'] }}"
    - name: Create init configuration.
      template:
        src: "precis_init.conf.j2"
        mode: 0600
        dest: "{{ precis_config_path }}/init.conf"
        owner: "{{ precis_user }}"
    - name: Create event listener configuration.
      template:
        src: "precis_event_listener.conf.j2"
        mode: 0600
        dest: "{{ precis_config_path }}/event_listener.conf"
        owner: "{{ precis_user }}"
      notify:
        - restart precis event listener
    - name: Create service configuration.
      template:
        src: "precis_service.conf.j2"
        mode: 0600
        dest: "{{ precis_config_path }}/service.conf"
        owner: "{{ precis_user }}"
      notify:
        - restart precis endpoint
        - restart precis generator
    - name: Create service configuration.
      template:
        src: "precis_cleanup.conf.j2"
        mode: 0600
        dest: "{{ precis_config_path }}/cleanup.conf"
        owner: "{{ precis_user }}"
    - name: Configure systemd services
      include_role:
        name: chameleon.docker_service
      vars:
        service_name: "{{ item.service }}"
        service_bind_address: "{{ api_interface_address }}"
        docker_image: "{{ item.image }}"
        docker_network: "{{ precis_docker_network }}"
        docker_mounts:
          - type: bind
            src: "{{ precis_config_path }}/{{ item.conf }}"
            dst: "/etc/experiment_precis/{{ item.conf }}"
        docker_ports:
          - "{{ api_interface_address }}:{{ item.port }}:8000/tcp"
      loop:
        - image: "{{ precis_event_listener_docker_image }}"
          service: "{{ precis_event_listener_service_name }}"
          conf: "event_listener.conf"
          port: "{{ precis_event_listener_prometheus_port }}"
        - image: "{{ precis_endpoint_docker_image }}"
          service: "{{ precis_endpoint_service_name }}"
          conf: "service.conf"
          port: "{{ precis_endpoint_port }}"
        - image: "{{ precis_generator_docker_image }}"
          service: "{{ precis_generator_service_name }}"
          conf: "service.conf"
          port: "{{ precis_generator_prometheus_port }}"
  become: true
  become_user: root
  tags:
    - configuration

- name: Configure haproxy for precis endpoint
  import_role:
    name: haproxy-config
  vars:
    project_services: "{{ precis_services }}"
  when: enable_haproxy | bool

- name: Create precis database
  shell: |
    docker run --rm --net={{ precis_docker_network }} \
    -v "{{ precis_config_path }}/init.conf:/etc/experiment_precis/init.conf" \
    {{ precis_init_docker_image }} 2>&1

- name: Configure cleanup task
  block:
    - name: Configure precis cleanup docker bash wrapper.
      template:
        src: precis_cleanup.j2
        mode: a+x
        dest: /usr/local/sbin/precis_cleanup
    - name: Set up precis cleanup task.
      include_role:
        name: chameleon.periodic_task
      vars:
        task_name: "precis_cleanup"
        task_command: "/usr/local/sbin/precis_cleanup"
        task_calendar: daily
  become: true
  become_user: root
  tags:
    - configuration
