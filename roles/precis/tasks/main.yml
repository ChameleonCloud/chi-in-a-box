---
- name: Create RabbitMQ entities.
  block:
    - name: Create RabbitMQ user.
      delegate_to: "{{ groups[precis_rabbitmq_inventory_group][0] }}"
      rabbitmq_user:
        user: "{{ precis_rabbitmq_user }}"
        password: "{{ precis_rabbitmq_password }}"
        permissions:
          - vhost: /
            configure_priv: "^({{ precis_rabbitmq_listener_queue }}|{{ precis_rabbitmq_rpc_queue }})$"
            read_priv: "^({{ precis_rabbitmq_listener_queue }}|{{ precis_rabbitmq_rpc_queue }})$"
            write_priv: "^{{ precis_rabbitmq_rpc_queue }}$"
        state: present
    # - name: Create RabbitMQ listener queue.
    #   delegate_to: "{{ groups[precis_rabbitmq_inventory_group][0] }}"
    #   rabbitmq_queue:
    #     name: "{{ precis_rabbitmq_listener_queue }}"
    #     vhost: /
    #     durable: no
    #     state: present
    # - name: Create RabbitMQ exchange bindings.
    #   delegate_to: "{{ groups[precis_rabbitmq_inventory_group][0] }}"
    #   rabbitmq_binding:
    #     name: "{{ item }}"
    #     destination: "{{ precis_rabbitmq_listener_queue }}"
    #     destination_type: queue
    #     routing_key: "*.notification"
    #     state: present
    #   loop: "{{ precis_rabbitmq_listener_bindings }}"
  tags:
    - rabbitmq

- name: Create MySQL user.
  delegate_to: "{{ groups[precis_mysql_inventory_group][0] }}"
  mysql_user:
    name: "{{ precis_mysql_user }}"
    host: "%"
    password: "{{ precis_mysql_password }}"
    priv: "{{ precis_mysql_database }}.*:ALL/{{ precis_mysql_external_database_privileges | join('/') }}"
    state: present
  tags:
    - mysql

- name: Pull precis service container images.
  docker_image:
    name: "{{ item }}"
    state: present
    force: yes
  loop:
    - "{{ precis_event_listener_docker_image }}"
    - "{{ precis_endpoint_docker_image }}"
    - "{{ precis_generator_docker_image }}"
  tags:
    - pull

- name: Create Docker network.
  docker_network:
    name: "{{ precis_docker_network }}"
  when: precis_docker_network != "host"

- name: Configure precis services.
  block:
    - name: Create config directory.
      file:
        path: "{{ precis_config_path }}"
        state: directory
    - name: Set default host addresses.
      when: vars[item.host_var] is not defined
      set_fact:
        "{{ item.host_var }}": >-
          {{ groups[vars[item.group_var]]
             | map('extract', hostvars, 'network_interface_internal_ipv4_address')
             | list | first }}
      loop:
        - host_var: precis_mysql_host
          group_var: precis_mysql_inventory_group
        - host_var: precis_rabbitmq_host
          group_var: precis_rabbitmq_inventory_group
    - name: Set bind address.
      set_fact:
        precis_endpoint_bind_address: "{{ ansible_facts[network_interface_internal]['ipv4']['address'] }}"
    - name: Create event listener configuration.
      template:
        src: "precis_event_listener.conf.j2"
        mode: 0600
        dest: "{{ precis_config_path }}/event_listener.conf"
        owner: "{{ precis_user }}"
      notify:
        - restart precis event listener
    - name: Create service configuration.
      template:
        src: "precis_service.conf.j2"
        mode: 0600
        dest: "{{ precis_config_path }}/service.conf"
        owner: "{{ precis_user }}"
      notify:
        - restart precis endpoint
        - restart precis generator
    - name: Configure systemd service.
      template:
        src: "{{ item.template }}"
        dest: "/etc/systemd/system/{{ item.service }}.service"
      notify:
        - "reload systemd daemon"
        - "{{ item.handler }}"
      loop:
        - template: "precis_event_listener.service.j2"
          handler: "restart precis event listener"
          service: "{{ precis_event_listener_service_name }}"
        - template: "precis_endpoint.service.j2"
          handler: "restart precis endpoint"
          service: "{{ precis_endpoint_service_name }}"
        - template: "precis_generator.service.j2"
          handler: "restart precis generator"
          service: "{{ precis_generator_service_name }}"
  tags:
    - configuration

- name: Enable precis services on boot.
  systemd:
    service: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - "{{ precis_event_listener_service_name }}"
    - "{{ precis_endpoint_service_name }}"
    - "{{ precis_generator_service_name }}"
