pipeline {
  agent {
    label "${params.JENKINS_AGENT_LABEL}"
  }

  environment {
    ANSIBLE_DIR = '/etc/ansible'
  }

  parameters {
    string(name: 'KOLLA_SERVICE_NAME', defaultValue: '',
           description: 'Name of Kolla service to reconfigure (e.g. "horizon")')
    string(name: 'JENKINS_AGENT_LABEL', defaultValue: '',
           description: 'The label of the Jenkins agent to execute the deploy on')
  }

  triggers {
    GenericTrigger(
      genericVariables: [
        [key: 'ref', value: '$.ref'],
        [key: 'changed_files', value: '$.commits[*].["modified","added","removed"][*]']
      ],

      causeString: 'Triggered on $ref',

      token: credentials('947d879c-87a4-44a3-a8f4-9dd3698530c4'),

      printContributedVariables: true,
      printPostContent: true,

      regexpFilterText: '$ref',
      regexpFilterExpression: 'refs/heads/master'
    )
  }

  stages {
    stage('setup') {
      steps {
        sh 'make venv'
        script {
          service_names = sh(returnStdout: true, script: "jenkins/extract_service.sh ${changed_files}")
        }
      }
    }

    stage('runtime-configs') {
      steps {
        runtime_configs_all(service_names)
      }
    }

    stage('reconfigure') {
      steps {
        reconfigure_all(service_names)
      }
    }
  }
}

def runtime_configs_all(list) {
  for (int i = 0; i < list.size(); i++) {
    sh "echo 'Generating runtime configuration for ${list[i]}'"
    sh "./ansible-playbook playbooks/${list[i]}.yml"
  }
}

def reconfigure_all(list) {
  for (int i = 0; i < list.size(); i++) {
    sh "echo 'Reconfiguring ${list[i]}'"
    sh "./kolla-ansible reconfigure --tags=${list[i]}"
  }
}
